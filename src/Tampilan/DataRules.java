/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Tampilan;
import java.sql.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import koneksi.koneksi;


  
/**
 *
 * @author dennis adzua firdaus
 */
public class DataRules extends javax.swing.JFrame {
private  Connection conn = new koneksi().connect();
private  Statement stat;
private ResultSet rs;
private DefaultTableModel modelGejala,modelRule;
    /**
     * Creates new form DataRules
     */
    public DataRules() {
        initComponents();
        setLocationRelativeTo(null);
    
        try {
            stat = conn.createStatement();
        }catch (SQLException e){
                JOptionPane.showMessageDialog(null,"Gagal Inisialisasi Statement:" +e);
                }

        tampilGejala();
        tampilRule();
        tampilPenyakitKeCombo();
        generateIDRule();
}

    
private void generateIDRule() {
        try {
            String sql = "SELECT IdRules FROM data_rules ORDER BY IdRules DESC LIMIT 1"; 
            rs =stat.executeQuery(sql);
            
            if (rs.next()) {
                String lastID = rs.getString("IdRules"); // contoh: "R009"
                int num = Integer.parseInt(lastID.substring(1)) + 1;
                String newID = String.format("R%03d", num); // jadi R010
                txtIdRuls.setText(newID);
            } else {
                // kalau belum ada data
                txtIdRuls.setText("R001");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Gagal Generate ID Rule: " + e);
        } catch (SQLException ex) {
    }
}
    
    public void tampilRule() {
        modelRule = new DefaultTableModel();
        modelRule.addColumn("Id Gejala");
        modelRule.addColumn("Nama Gejala");
        tblPenyakit.setModel(modelRule);

        String KodePenyakit = cbkdpenyakit.getSelectedItem() != null
                ? cbkdpenyakit.getSelectedItem().toString(): "";

        try {
            rs = stat.executeQuery("SELECT  data_rules.Id_Gejala, data_gejala.Nama_Gejala FROM data_rules " +
                "JOIN data_gejala ON data_rules.Id_Gejala = data_gejala.Id_Gejala "+"WHERE idpenyakit  = '" + KodePenyakit + "'");
            while (rs.next()) {
                modelRule.addRow(new Object[]{
                    rs.getString("Id_Gejala"),
                    rs.getString("Nama_Gejala")
                });
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Gagal Tampil Rule: " + e);
        }
    }
    
    

    public void tampilGejala() {
        modelGejala = new DefaultTableModel();
        modelGejala.addColumn("Id Gejala");
        modelGejala.addColumn("Nama Gejala");
        tblGejala.setModel(modelGejala);

        try {
            rs = stat.executeQuery("SELECT * FROM data_gejala");
            while (rs.next()) {
                modelGejala.addRow(new Object[]{
                    rs.getString("Id_Gejala"),
                    rs.getString("Nama_Gejala")
                });
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Gagal Tampil Gejala: " + e);
        }
    }

    private void tampilPenyakitKeCombo() {
        try {
            rs = stat.executeQuery("SELECT * FROM data_penyakit");
            while (rs.next()) {
                cbkdpenyakit.addItem(rs.getString("Id_Penyakit"));
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Gagal Tampil Penyakit: " + e);
        }
    }
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtIdRuls = new javax.swing.JTextField();
        txtnmpenyakit = new javax.swing.JTextField();
        cbkdpenyakit = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPenyakit = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblGejala = new javax.swing.JTable();
        jbhapus = new javax.swing.JButton();
        jbsimpan = new javax.swing.JButton();
        jbKembali = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 0, 51));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Data Rule");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(380, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(318, 318, 318))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(102, 0, 102));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/symptoms.png"))); // NOI18N
        jLabel2.setText("Id Rule");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/mask.png"))); // NOI18N
        jLabel3.setText("Id Penyakit");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/virus.png"))); // NOI18N
        jLabel4.setText("Nama Penyakit");

        txtIdRuls.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        txtnmpenyakit.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        cbkdpenyakit.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cbkdpenyakit.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        cbkdpenyakit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbkdpenyakitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addGap(56, 56, 56)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtnmpenyakit, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbkdpenyakit, javax.swing.GroupLayout.Alignment.LEADING, 0, 144, Short.MAX_VALUE)
                    .addComponent(txtIdRuls, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(114, 114, 114)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtIdRuls, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cbkdpenyakit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtnmpenyakit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(102, 0, 102));

        tblPenyakit.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Kode Penyakit", "Nama Penyakit"
            }
        ));
        jScrollPane1.setViewportView(tblPenyakit);

        tblGejala.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        tblGejala.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Id Gejala", "Nama Gejala"
            }
        ));
        jScrollPane2.setViewportView(tblGejala);

        jbhapus.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jbhapus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/pointing-up.png"))); // NOI18N
        jbhapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbhapusActionPerformed(evt);
            }
        });

        jbsimpan.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jbsimpan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/pointing-down.png"))); // NOI18N
        jbsimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbsimpanActionPerformed(evt);
            }
        });

        jbKembali.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jbKembali.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/exit-door.png"))); // NOI18N
        jbKembali.setText("Kembali");
        jbKembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbKembaliActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jbhapus, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(jbKembali)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbsimpan, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbKembali)
                    .addComponent(jbhapus)
                    .addComponent(jbsimpan))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbsimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbsimpanActionPerformed
       int[] selectedRows = tblGejala.getSelectedRows();
        if (selectedRows.length == 0) {
            JOptionPane.showMessageDialog(null, "Pilih satu atau beberapa gejala terlebih dahulu.");
            return;
        }

        String idRules = txtIdRuls.getText();
        String kodePenyakit = cbkdpenyakit.getSelectedItem().toString();

        try {
            String sql = "INSERT INTO data_rules (IdRules, idpenyakit, Id_Gejala) VALUES (?, ?, ?)";
            PreparedStatement ps = conn.prepareStatement(sql);

            for (int row : selectedRows) {
                String kodeGejala = tblGejala.getValueAt(row, 0).toString();
                ps.setString(1, idRules);
                ps.setString(2, kodePenyakit);
                ps.setString(3, kodeGejala);
                ps.executeUpdate();
            }

            tampilRule();
            JOptionPane.showMessageDialog(null, "Gejala berhasil ditambahkan ke rule.");

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Gagal Menambahkan Rule: " + e);
            generateIDRule();
        }
    }//GEN-LAST:event_jbsimpanActionPerformed

    private void jbKembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbKembaliActionPerformed
       this.dispose();
        new MenuUtama().setVisible(true);
    }//GEN-LAST:event_jbKembaliActionPerformed

    private void jbhapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbhapusActionPerformed
       int selectedRow = tblPenyakit.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Pilih gejala yang akan dihapus!");
            return;
        }

        String kodeGejala = tblPenyakit.getValueAt(selectedRow, 0).toString();
        String kodePenyakit = cbkdpenyakit.getSelectedItem().toString();

        try {
            String sql = "DELETE FROM data_rules WHERE idpenyakit=? AND Id_Gejala=?";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, kodePenyakit);
            ps.setString(2, kodeGejala);
            ps.executeUpdate();
            tampilRule();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Gagal Menghapus Rule: " + e);
        }
                        
    }//GEN-LAST:event_jbhapusActionPerformed

    private void cbkdpenyakitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbkdpenyakitActionPerformed
        String kode = cbkdpenyakit.getSelectedItem() != null?
                 cbkdpenyakit.getSelectedItem().toString(): "";
        try {
            rs = stat.executeQuery("SELECT Nama_Penyakit FROM data_penyakit WHERE Id_Penyakit = '" + kode + "'");
            if (rs.next()) {
                txtnmpenyakit.setText(rs.getString("Nama_Penyakit"));
            }
            tampilRule();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error ambil nama penyakit: " + e);
        }
    
             
    }//GEN-LAST:event_cbkdpenyakitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DataRules.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DataRules.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DataRules.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DataRules.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DataRules().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbkdpenyakit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbKembali;
    private javax.swing.JButton jbhapus;
    private javax.swing.JButton jbsimpan;
    private javax.swing.JTable tblGejala;
    private javax.swing.JTable tblPenyakit;
    private javax.swing.JTextField txtIdRuls;
    private javax.swing.JTextField txtnmpenyakit;
    // End of variables declaration//GEN-END:variables

   
    
}
